# Set default terminal to a variant of screen that supports 256 colors.
set-option -g default-terminal "screen-256color"

# Start window indices at 1.
set-option -g base-index 1

# Renumber windows after removing one.
set-option -g renumber-windows on

# Unbind default tmux C-b prefix because it conflicts with Vim's C-b binding for
# scrolling windows backwards (upwards).
unbind C-b

# Set C-Space as the prefix.
set-option -g prefix C-Space
bind-key C-Space send-prefix -2

# Use Vim keybindings in copy mode.
set-window-option -g mode-keys vi

# In copy mode setup 'v' to begin selection and 'y' to copy as in Vim.
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default copy mode copy binding 'Enter' to also use copy-pipe.
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Enable copy mode scrolling using the mouse wheel.
set-window-option -g mode-mouse on

# Enable selecting of windows and selecting and resizing of panes with the
# mouse.
set-option -g mouse-select-window on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on

# Smart pane switching with awareness of vim splits in combination with
# vim-tmux-navigator.
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Open new windows and panes with the working directory set to the same
# directory as the working directory of the current pane.
bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"

# Solarized dark colors

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

